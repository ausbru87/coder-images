name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_USERNAME: ausbruhn87

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        category:
          - datasci/python
          - datasci/pytorch
          - datasci/tensorflow
          - datasci/ml
          - dev/node
          - dev/go
          - dev/rust
          - dev/java
          - infra/k8s
          - infra/terraform
          - infra/ansible
          - infra/cloud
        variant:
          - ubuntu
          - fedora
          - ubi9
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract image metadata
        id: meta
        run: |
          CATEGORY="${{ matrix.category }}"
          VARIANT="${{ matrix.variant }}"

          # Convert category path to image name (e.g., datasci/python -> coder-datasci-python)
          IMAGE_NAME="coder-${CATEGORY//\//-}"

          # Determine version tags based on variant
          if [ "$VARIANT" == "ubuntu" ]; then
            VERSION="24.04"
          elif [ "$VARIANT" == "fedora" ]; then
            VERSION="42"
          elif [ "$VARIANT" == "ubi9" ]; then
            VERSION="9.6"
          fi

          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "full_image_name=${DOCKER_USERNAME}/${IMAGE_NAME}-${VARIANT}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.category }}
          file: ./${{ matrix.category }}/${{ matrix.variant }}.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.meta.outputs.full_image_name }}:${{ steps.meta.outputs.version }}
            ${{ steps.meta.outputs.full_image_name }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
