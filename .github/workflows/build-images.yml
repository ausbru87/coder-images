name: Build and Push Images

on:
  push:
    branches:
      - main
    paths:
      - 'base/**'
      - 'datasci/**'
      - 'dev/**'
      - 'infra/**'
      - '.github/workflows/build-images.yml'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: ausbruhn87

jobs:
  # Build base images in parallel
  build-base-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push base-ubuntu image
        uses: docker/build-push-action@v5
        with:
          context: ./base
          file: ./base/ubuntu.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-base-ubuntu:24.04
            ${{ env.DOCKER_USERNAME }}/coder-base-ubuntu:latest
          cache-from: type=gha,scope=base-ubuntu
          cache-to: type=gha,mode=max,scope=base-ubuntu
          platforms: linux/amd64,linux/arm64

  build-base-fedora:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push base-fedora image
        uses: docker/build-push-action@v5
        with:
          context: ./base
          file: ./base/fedora.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-base-fedora:42
            ${{ env.DOCKER_USERNAME }}/coder-base-fedora:latest
          cache-from: type=gha,scope=base-fedora
          cache-to: type=gha,mode=max,scope=base-fedora
          platforms: linux/amd64,linux/arm64

  build-base-ubi9:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push base-ubi9 image
        uses: docker/build-push-action@v5
        with:
          context: ./base
          file: ./base/ubi9.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-base-ubi9:9.6
            ${{ env.DOCKER_USERNAME }}/coder-base-ubi9:latest
          cache-from: type=gha,scope=base-ubi9
          cache-to: type=gha,mode=max,scope=base-ubi9
          platforms: linux/amd64,linux/arm64

  # Build datasci-python (depends on respective base images)
  build-datasci-python-ubuntu:
    needs: build-base-ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push datasci-python-ubuntu image
        uses: docker/build-push-action@v5
        with:
          context: ./datasci/python
          file: ./datasci/python/ubuntu.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-datasci-python-ubuntu:24.04
            ${{ env.DOCKER_USERNAME }}/coder-datasci-python-ubuntu:latest
          cache-from: type=gha,scope=datasci-python-ubuntu
          cache-to: type=gha,mode=max,scope=datasci-python-ubuntu
          platforms: linux/amd64,linux/arm64

  build-datasci-python-fedora:
    needs: build-base-fedora
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push datasci-python-fedora image
        uses: docker/build-push-action@v5
        with:
          context: ./datasci/python
          file: ./datasci/python/fedora.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-datasci-python-fedora:42
            ${{ env.DOCKER_USERNAME }}/coder-datasci-python-fedora:latest
          cache-from: type=gha,scope=datasci-python-fedora
          cache-to: type=gha,mode=max,scope=datasci-python-fedora
          platforms: linux/amd64,linux/arm64

  build-datasci-python-ubi9:
    needs: build-base-ubi9
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push datasci-python-ubi9 image
        uses: docker/build-push-action@v5
        with:
          context: ./datasci/python
          file: ./datasci/python/ubi9.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-datasci-python-ubi9:9.6
            ${{ env.DOCKER_USERNAME }}/coder-datasci-python-ubi9:latest
          cache-from: type=gha,scope=datasci-python-ubi9
          cache-to: type=gha,mode=max,scope=datasci-python-ubi9
          platforms: linux/amd64,linux/arm64

  # Build other datasci images per variant (depend on datasci-python)
  build-datasci-ubuntu:
    needs: build-datasci-python-ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [pytorch, tensorflow, ml]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push datasci-${{ matrix.type }}-ubuntu image
        uses: docker/build-push-action@v5
        with:
          context: ./datasci/${{ matrix.type }}
          file: ./datasci/${{ matrix.type }}/ubuntu.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-datasci-${{ matrix.type }}-ubuntu:24.04
            ${{ env.DOCKER_USERNAME }}/coder-datasci-${{ matrix.type }}-ubuntu:latest
          cache-from: type=gha,scope=datasci-${{ matrix.type }}-ubuntu
          cache-to: type=gha,mode=max,scope=datasci-${{ matrix.type }}-ubuntu
          platforms: linux/amd64,linux/arm64

  build-datasci-fedora:
    needs: build-datasci-python-fedora
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [pytorch, tensorflow, ml]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push datasci-${{ matrix.type }}-fedora image
        uses: docker/build-push-action@v5
        with:
          context: ./datasci/${{ matrix.type }}
          file: ./datasci/${{ matrix.type }}/fedora.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-datasci-${{ matrix.type }}-fedora:42
            ${{ env.DOCKER_USERNAME }}/coder-datasci-${{ matrix.type }}-fedora:latest
          cache-from: type=gha,scope=datasci-${{ matrix.type }}-fedora
          cache-to: type=gha,mode=max,scope=datasci-${{ matrix.type }}-fedora
          platforms: linux/amd64,linux/arm64

  build-datasci-ubi9:
    needs: build-datasci-python-ubi9
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [pytorch, tensorflow, ml]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push datasci-${{ matrix.type }}-ubi9 image
        uses: docker/build-push-action@v5
        with:
          context: ./datasci/${{ matrix.type }}
          file: ./datasci/${{ matrix.type }}/ubi9.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-datasci-${{ matrix.type }}-ubi9:9.6
            ${{ env.DOCKER_USERNAME }}/coder-datasci-${{ matrix.type }}-ubi9:latest
          cache-from: type=gha,scope=datasci-${{ matrix.type }}-ubi9
          cache-to: type=gha,mode=max,scope=datasci-${{ matrix.type }}-ubi9
          platforms: linux/amd64,linux/arm64

  # Build dev images per variant (depend on base)
  build-dev-ubuntu:
    needs: build-base-ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [node, go, rust, java]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push dev-${{ matrix.type }}-ubuntu image
        uses: docker/build-push-action@v5
        with:
          context: ./dev/${{ matrix.type }}
          file: ./dev/${{ matrix.type }}/ubuntu.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-dev-${{ matrix.type }}-ubuntu:24.04
            ${{ env.DOCKER_USERNAME }}/coder-dev-${{ matrix.type }}-ubuntu:latest
          cache-from: type=gha,scope=dev-${{ matrix.type }}-ubuntu
          cache-to: type=gha,mode=max,scope=dev-${{ matrix.type }}-ubuntu
          platforms: linux/amd64,linux/arm64

  build-dev-fedora:
    needs: build-base-fedora
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [node, go, rust, java]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push dev-${{ matrix.type }}-fedora image
        uses: docker/build-push-action@v5
        with:
          context: ./dev/${{ matrix.type }}
          file: ./dev/${{ matrix.type }}/fedora.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-dev-${{ matrix.type }}-fedora:42
            ${{ env.DOCKER_USERNAME }}/coder-dev-${{ matrix.type }}-fedora:latest
          cache-from: type=gha,scope=dev-${{ matrix.type }}-fedora
          cache-to: type=gha,mode=max,scope=dev-${{ matrix.type }}-fedora
          platforms: linux/amd64,linux/arm64

  build-dev-ubi9:
    needs: build-base-ubi9
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [node, go, rust, java]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push dev-${{ matrix.type }}-ubi9 image
        uses: docker/build-push-action@v5
        with:
          context: ./dev/${{ matrix.type }}
          file: ./dev/${{ matrix.type }}/ubi9.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-dev-${{ matrix.type }}-ubi9:9.6
            ${{ env.DOCKER_USERNAME }}/coder-dev-${{ matrix.type }}-ubi9:latest
          cache-from: type=gha,scope=dev-${{ matrix.type }}-ubi9
          cache-to: type=gha,mode=max,scope=dev-${{ matrix.type }}-ubi9
          platforms: linux/amd64,linux/arm64

  # Build infra images per variant (depend on base)
  build-infra-ubuntu:
    needs: build-base-ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [k8s, terraform, ansible, cloud]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push infra-${{ matrix.type }}-ubuntu image
        uses: docker/build-push-action@v5
        with:
          context: ./infra/${{ matrix.type }}
          file: ./infra/${{ matrix.type }}/ubuntu.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-infra-${{ matrix.type }}-ubuntu:24.04
            ${{ env.DOCKER_USERNAME }}/coder-infra-${{ matrix.type }}-ubuntu:latest
          cache-from: type=gha,scope=infra-${{ matrix.type }}-ubuntu
          cache-to: type=gha,mode=max,scope=infra-${{ matrix.type }}-ubuntu
          platforms: linux/amd64,linux/arm64

  build-infra-fedora:
    needs: build-base-fedora
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [k8s, terraform, ansible, cloud]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push infra-${{ matrix.type }}-fedora image
        uses: docker/build-push-action@v5
        with:
          context: ./infra/${{ matrix.type }}
          file: ./infra/${{ matrix.type }}/fedora.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-infra-${{ matrix.type }}-fedora:42
            ${{ env.DOCKER_USERNAME }}/coder-infra-${{ matrix.type }}-fedora:latest
          cache-from: type=gha,scope=infra-${{ matrix.type }}-fedora
          cache-to: type=gha,mode=max,scope=infra-${{ matrix.type }}-fedora
          platforms: linux/amd64,linux/arm64

  build-infra-ubi9:
    needs: build-base-ubi9
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [k8s, terraform, ansible, cloud]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push infra-${{ matrix.type }}-ubi9 image
        uses: docker/build-push-action@v5
        with:
          context: ./infra/${{ matrix.type }}
          file: ./infra/${{ matrix.type }}/ubi9.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/coder-infra-${{ matrix.type }}-ubi9:9.6
            ${{ env.DOCKER_USERNAME }}/coder-infra-${{ matrix.type }}-ubi9:latest
          cache-from: type=gha,scope=infra-${{ matrix.type }}-ubi9
          cache-to: type=gha,mode=max,scope=infra-${{ matrix.type }}-ubi9
          platforms: linux/amd64,linux/arm64
